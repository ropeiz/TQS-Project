<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC
    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">
<!-- Grabbed from
     https://code.google.com/p/google-api-java-client/source/browse/checkstyle.xml
     since it seems to enforce the google style guide for Java.-->
<!-- This is a checkstyle configuration file. For descriptions of
what the following rules do, please see the checkstyle configuration
page at http://checkstyle.sourceforge.net/config.html -->
<module name="Checker">
  <module name="FileTabCharacter">
    <!-- Checks that there are no tab characters in the file. -->
  </module>
  <module name="NewlineAtEndOfFile"/>
  <module name="RegexpSingleline">
    <!-- Checks that FIXME is not used in comments.  TODO is preferred. -->
    <property name="format" value="((//.*)|(\*.*))FIXME" />
    <property name="message" value='TODO is preferred to FIXME.  e.g. "TODO(royw): Refactor when v2 is released."' />
  </module>
  <module name="RegexpSingleline">
    <!-- Checks that TODOs are named. -->
    <property name="format" value="((//.*)|(\*.*))TODO[^(^s]" />
    <property name="message" value='All TODOs should be named.  e.g. "TODO(royw): Refactor when v2 is released."' />
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="[ \t]+$"/>
    <property name="message" value="Lines may not have a trailing whitespace."/>
  </module>
  <module name="RegexpSingleline">
    <property name="severity" value="error"/>
    <property name="format" value="junit.framework"/>
    <property name="message" value="The package junit.framework belongs to JUnit v3. Use org.junit instead."/>
  </module>
  <!-- All Java AST specific tests live under TreeWalker module. -->
  <module name="TreeWalker">
    <!--
    IMPORT CHECKS
    -->
    <module name="AvoidStarImport" />
    <module name="RedundantImport">
      <!-- Checks for redundant import statements. -->
      <property name="severity" value="error"/>
    </module>
    <module name="ImportOrder">
      <!-- Checks for out of order import statements. -->
      <property name="severity" value="warning"/>
      <property name="ordered" value="false"/>
      <property name="option" value="top"/>
      <property name="tokens" value="STATIC_IMPORT, IMPORT"/>
    </module>
    <module name="IllegalImport"/>
    <module name="UnusedImports">
      <property name="processJavadoc" value="true"/>
    </module>
    <!--
    CLASS CHECKS
    -->
    <module name="HideUtilityClassConstructor"/>
    <module name="MutableException"/>
    <!--
    NAMING CHECKS
    -->
    <module name="PackageName">
      <!-- Validates identifiers for package names against the
        supplied expression. -->
      <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="TypeNameCheck">
      <property name="severity" value="warning"/>
    </module>
    <module name="ConstantNameCheck">
      <property name="applyToPublic" value="true"/>
      <property name="applyToProtected" value="true"/>
      <property name="applyToPackage" value="true"/>
      <property name="applyToPrivate" value="false"/>
      <property name="format" value="^([A-Z][A-Z0-9]*(_[A-Z0-9]+)*|FLAG_.*)$"/>
      <message key="name.invalidPattern"
               value="Variable ''{0}'' should be in ALL_CAPS (if it is a constant) or be private (otherwise)."/>
      <property name="severity" value="warning"/>
    </module>
    <module name="StaticVariableName" />
    <module name="MemberNameCheck">
      <property name="applyToPublic" value="true"/>
      <property name="applyToPrivate" value="true"/>
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="MethodNameCheck">
      <property name="severity" value="warning"/>
    </module>
    <module name="ParameterName">
      <property name="severity" value="warning"/>
    </module>
    <module name="LocalFinalVariableName">
      <property name="severity" value="warning"/>
    </module>
    <module name="LocalVariableName">
      <property name="severity" value="warning"/>
    </module>
    <!--
    LENGTH and CODING CHECKS
    -->
    <module name="LineLength">
      <!-- Checks if a line is too long. -->
      <property name="max" value="${com.puppycrawl.tools.checkstyle.checks.sizes.LineLength.max}" default="100"/>
      <property name="severity" value="error"/>
      <property name="ignorePattern"
          value="${com.puppycrawl.tools.checkstyle.checks.sizes.LineLength.ignorePattern}"
          default="^(package .*;\s*)|(import .*;\s*)|( *[\*\/]* *(https?|file)://.*)|( *[\*\/]*.*\{@\w+.*\}.*)$"/>
    </module>
    <module name="LeftCurly">
      <property name="severity" value="warning"/>
    </module>
    <module name="RightCurly">
      <property name="option" value="same"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="NeedBraces">
      <property name="severity" value="warning"/>
      <property name="tokens" value="LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO"/>
    </module>
    <module name="UpperEll">
      <property name="severity" value="error"/>
    </module>
    <module name="FallThrough">
      <property name="reliefPattern"
       value="fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on"/>
      <property name="severity" value="error"/>
    </module>
    <!--
    MODIFIERS CHECKS
    -->
    <module name="ModifierOrder"/>
    <!--
    WHITESPACE CHECKS
    -->
    <module name="WhitespaceAround">
      <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, SL, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN"/>
      <property name="severity" value="error"/>
    </module>
    <module name="WhitespaceAfter">
      <property name="tokens" value="COMMA, SEMI, TYPECAST"/>
    </module>
    <module name="NoWhitespaceAfter">
      <property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS"/>
      <property name="allowLineBreaks" value="true"/>
      <property name="severity" value="error"/>
    </module>
    <module name="NoWhitespaceBefore">
      <property name="tokens" value="SEMI, DOT, POST_DEC, POST_INC"/>
      <property name="allowLineBreaks" value="true"/>
      <property name="severity" value="error"/>
    </module>
    <module name="ParenPad">
      <property name="severity" value="warning"/>
    </module>
    <module name="OperatorWrap">
      <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, SL, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN"/>
      <property name="severity" value="error"/>
    </module>
  </module>
</module>
